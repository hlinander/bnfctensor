entrypoints Book ;

Derivation. Book ::= [Stmt] ;

-----------------------------------------------------------------------
-- Statements
-----------------------------------------------------------------------

token DocString '#' (char - '\n') * ;

Void.      Stmt ::= Expr ";" ;
Assign.    Stmt ::= Label ":=" Expr ";" ;
Symmetry.  Stmt ::= Sym ;
TensorDef. Stmt ::= "dim" [Expr4] Integer ";" ;
RowDoc.    Stmt ::= DocString ;
FuncDef.   Stmt ::= "transform" Ident "(" [Expr4] ")" "{" [Stmt] "}" ;

(:[]). [Stmt] ::= Stmt ;
(:).   [Stmt] ::= Stmt [Stmt] ;

-----------------------------------------------------------------------
-- Base symmetry declarations
-----------------------------------------------------------------------

AntiSymmetric. Sym ::= "anti_symmetric" [Expr4] ";" ;
Symmetric.     Sym ::= "symmetric" [Expr4] ";" ;
Equality.      Sym ::= "sym" [Expr4] "{" [EqSym] "}" ;

-----------------------------------------------------------------------
-- Equality symmetry declarations
-----------------------------------------------------------------------

EqualityExpr. EqSym ::= SymExpr "=" SymExpr ;

(:[]). [EqSym] ::=  EqSym ";" ;
(:).   [EqSym] ::= EqSym ";" [EqSym] ;

NegSym.    SymExpr  ::= "-" SymExpr1 ;
TensorSym. SymExpr1 ::= Label [Index] ;

coercions SymExpr 1 ;

-----------------------------------------------------------------------
-- Tensor expressions
-----------------------------------------------------------------------

Func. Expr  ::= Label "(" [Expr] ")" ;
Add.  Expr1 ::= Expr1 "+" Expr2 ;
Sub.  Expr1 ::= Expr1 "-" Expr2 ;
Neg.  Expr1 ::= "-" Expr1 ;           -- shift/reduce conflict with Sub
Mul.  Expr2 ::= Expr2 "." Expr3 ;
Div.  Expr2 ::= Expr2 "/" Expr3 ;

(:[]). [Expr] ::= Expr ;
(:).   [Expr] ::= Expr "," [Expr] ;

-----------------------------------------------------------------------
-- Tensor variables
-----------------------------------------------------------------------

Indexed. Expr3 ::= Expr3 [Index] ;
Tensor.  Expr4 ::= Label ;

(:[]). [Expr4] ::= Expr4 ;
(:).   [Expr4] ::= Expr4 "," [Expr4] ;

coercions Expr 4 ;

-----------------------------------------------------------------------
-- Index variables
-----------------------------------------------------------------------

Upper. Index ::= "^" Label ;
Lower. Index ::= "_" Label ;

(:[]). [Index] ::= Index;
(:).   [Index] ::= Index [Index] ;

-----------------------------------------------------------------------
-- Labels
-----------------------------------------------------------------------

token Label letter (letter | digit)* ;

-----------------------------------------------------------------------
-- Documentation
-----------------------------------------------------------------------

comment "//" ;
comment "/*" "*/" ;
